/**
 * 基础module，放置所有基础工具类
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.greenrobot.greendao'

def cfg = rootProject.ext.android
def _dependencies = rootProject.ext.dependencies

android {
    compileSdkVersion cfg.compileSdkVersion
    buildToolsVersion cfg.buildToolsVersion
    defaultConfig {
//        applicationId "com.example.kotlinmvpdemo"
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode cfg.versionCode
        versionName cfg.versionName
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    sourceSets {
        main {
            res.srcDirs =
                    [
                            'src/main/res/layouts/activities',
                            'src/main/res/layouts/dialogs',
                            'src/main/res/layouts/views',
                            'src/main/res/layouts',
                            'src/main/res'
                    ]
        }
    }

    /*******数据库版本以及Dao的相关设置*******/
    greendao {
        //数据库schema版本
        schemaVersion 1
        //设置DaoMaster DaoSession Dao包名，默认的是bean所在的包名
        daoPackage 'com.example.kotlinmvpdemo'
        //设置DaoMaster DaoSeeeion Dao目录，默认是build/generated/source/greendao
        //targetGenDir 'src/main/greendao'
        //设置true,自动生成测试单元
        //generateTests 'true'
        //设置生成的单元测试目录，默认是src/androidTest/java
        //targetGenDirTests 'src/androidTest/java'
        //设置目录,kotlin才能找到相关文件
        targetGenDir 'src/main/java'
    }
}


/*******AROUTER 配置*******/
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    api fileTree(dir: 'libs', include: ['*.jar'])
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api _dependencies.appcompat
    api _dependencies.core_ktx
    /** 约束布局 **/
    api _dependencies.constraintlayout
    /** dagger2 **/
    implementation _dependencies.dagger2
    kapt _dependencies.dagger_compiler2
    /** 为方法数超过 64K 的应用启用 MultiDex **/
    implementation _dependencies.multidex_version
    /** Rxjava2+retrofit2+okhttp3 **/
    api _dependencies.rxandroid2
    api _dependencies.rxjava2
    api _dependencies.retrofit
    api _dependencies.converter_gson
    api _dependencies.adapter_rxjava2
    api _dependencies.okhttp3
    api _dependencies.logging_interceptor
    /** stetho 调试工具 **/
    api _dependencies.stetho
    api _dependencies.stethookhttp3
    /** greendao **/
    api _dependencies.greendao
    api _dependencies.greendao_generator
    api _dependencies.greendaoupgradehelper
    /** glide **/
    api _dependencies.glide
    kapt _dependencies.glide_compiler
    /** eventbus3 **/
    api _dependencies.eventbus3
    /** recyclerview  **/
    api _dependencies.recyclerview
    /** Arouter **/
    api _dependencies.arouter
    kapt _dependencies.arouter_compiler
    /**ViewPager2**/
    api _dependencies.viewpager2
    /**协程**/
    //依赖协程核心库
    api _dependencies.coroutines_core
    //依赖当前平台所对应的平台库
    api _dependencies.coroutines_android
    /**SmartRefreshLayout 智能下拉刷新框架**/
    api _dependencies.smartrefreshlayout_kernel
    api _dependencies.smartrefreshlayout_header_radar
    api _dependencies.smartrefreshlayout_header_classics
    api _dependencies.smartrefreshlayout_footer_classics
    /** Rxlifecyle **/
//    api _dependencies.rxlifecycle
//    api _dependencies.rxlifecycle_android
    api _dependencies.rxlifecycle_components
    /** 支持反射 **/
    api "org.jetbrains.kotlin:kotlin-reflect:$rootProject.ext.kotlin_version"
    /** 手指放大缩小移动 **/
    api _dependencies.gestureviewbinder
//    api 'com.github.xqgithub:GestureViewBinder:1.0.4'
    /** 自定义验证码输入框 **/
    api _dependencies.VerificationCodeInputView
    /** 日历控件calendarview **/
    api _dependencies.calendarview
    /** 屏幕适配 Autosize **/
    api _dependencies.autosize

}

