apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: 'and_res_guard.gradle'

def cfg = rootProject.ext.android
def _dependencies = rootProject.ext.dependencies

android {
    compileSdkVersion cfg.compileSdkVersion
    buildToolsVersion cfg.buildToolsVersion
    defaultConfig {
        applicationId "com.example.kotlinmvpdemo"
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode cfg.versionCode
        versionName cfg.versionName
        //版本名后面添加一句话，意思就是flavor dimension 它的维度就是该版本号，这样维度就是都是统一的了
        flavorDimensions "versionCode"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    signingConfigs {
        jks_config {
            keyAlias rootProject.ext.signingConfig.keyAlias
            keyPassword rootProject.ext.signingConfig.keyPassword
            storeFile file(rootProject.ext.signingConfig.storeFile)
            storePassword rootProject.ext.signingConfig.storePassword
        }
    }

    buildTypes {
        debug {
            // 是否进行混淆
            minifyEnabled false
        }
        release {
            // 是否进行混淆
            minifyEnabled false
            // 混淆文件的位置，其中'proguard-android.txt'为sdk默认的混淆配置，'proguard-rules-haha2.pro' 是该模块下的混淆配置
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.jks_config
        }
    }

    /*******创建productFlavors 实现版本差异化*******/
    productFlavors {
        ceshi {
            applicationId "com.example.kotlinmvpdemo.ceshi"
            manifestPlaceholders = [package_id : "package_10001",
                                    app_name   : "@string/productflavors_ceshi",
                                    app_logo   : "@mipmap/app_logo_jingyong",
                                    app_version: "ceshi"
            ]
        }
        shengchan {
            applicationId "com.example.kotlinmvpdemo"
            manifestPlaceholders = [package_id : "package_10002",
                                    app_name   : "@string/productflavors_shengchan",
                                    app_logo   : "@mipmap/app_logo_shandian",
                                    app_version: "shengchan"
            ]
        }
    }
}

/*******AROUTER 配置*******/
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}


dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation _dependencies.dagger2
    kapt _dependencies.dagger_compiler2

    kapt _dependencies.arouter_compiler

    /**
     * 引入module
     */
    implementation project(':baselibrary')
    //需要在不同模块使用ARouter 需要引入该模块
    implementation project(':testlibrary')
}
